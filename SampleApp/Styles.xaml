<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ui="clr-namespace:WPFUtilities.Components.UI;assembly=WPFUtilities"
             xmlns:converters="clr-namespace:WPFUtilities.Converters;assembly=WPFUtilities"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="Button">
        <Setter Property="Padding" Value="4,2,4,2"/>
    </Style>

    <Style TargetType="Border" x:Key="Border_Default">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Gray"/>
    </Style>

    <Style TargetType="Border" x:Key="BorderTop_Default">
        <Setter Property="BorderThickness" Value="0,0.5,0,0"/>
        <Setter Property="BorderBrush" Value="Gray"/>
    </Style>

    <sys:Double x:Key="Margin_Default_Size">4</sys:Double>
    <Thickness x:Key="Margin_Default" 
               Left="{StaticResource Margin_Default_Size}"
               Top="{StaticResource Margin_Default_Size}"
               Right="{StaticResource Margin_Default_Size}"
               Bottom="{StaticResource Margin_Default_Size}"/>
    <Thickness x:Key="MarginBottom_Default"
               Bottom="{StaticResource Margin_Default_Size}"/>
    <Thickness x:Key="MarginTop_Default"
               Top="{StaticResource Margin_Default_Size}"/>
    
    <Style x:Key="ErrorText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <SolidColorBrush x:Key="DataGrid_LinesBrush">LightGray</SolidColorBrush>

    <Style TargetType="DataGrid">
        <!-- 
        <Setter Property="ui:DataGrid.AdjustColumnSizeMode" Value="OnResize"/>
        -->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGrid_LinesBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGrid_LinesBrush}"/>
    </Style>   
    
    <!-- tree data grid -->

    <Style x:Key="TreeDataGrid_Row" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsFolded}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeDataGrid_TreeCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Margin="2">
                        <ToggleButton IsChecked="{Binding IsExpanded,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                              Visibility="{Binding ChildsCount,
                                                        Converter={x:Static converters:NumberToVisibilityConverter.Instance}}"
                                              Width="16px"
                                              Height="16px"
                                              HorizontalContentAlignment="Center"
                                              VerticalContentAlignment="Center"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              x:Name="tb"
                                              ui:Layout.LeftMarginMultiplyFactor="{Binding Width,ElementName=tb}"
                                              ui:Layout.LeftMarginMultiplyFrom="{Binding Level}"
                                              >
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" Value="-"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Content" Value="+"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <TextBlock Text="{Binding Name}" Margin="8,0,0,0"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>