<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="clr-namespace:WPFUtilities.Components.UI;assembly=WPFUtilities"
    xmlns:converters="clr-namespace:WPFUtilities.Converters;assembly=WPFUtilities"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- #region controls -->
    
    <Style TargetType="Button">
        <Setter Property="Padding" Value="4,2,4,2"/>
    </Style>

    <Style TargetType="Border" x:Key="Border_Default">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Gray"/>
    </Style>

    <Style TargetType="Border" x:Key="BorderTop_Default">
        <Setter Property="BorderThickness" Value="0,0.5,0,0"/>
        <Setter Property="BorderBrush" Value="Gray"/>
    </Style>
    
    <!-- #endregion -->

    <!-- #region frames -->

    <SolidColorBrush x:Key="Frame_Background">WhiteSmoke</SolidColorBrush>
    <SolidColorBrush x:Key="Frame_LineBrush">DarkGray</SolidColorBrush>
    <sys:Double x:Key="Frame_Size">1</sys:Double>

    <!-- #endregion -->

    <!-- #region layout -->

    <sys:Double x:Key="Margin_Default_Size">4</sys:Double>
    
    <Thickness x:Key="Margin_Default" 
               Left="{StaticResource Margin_Default_Size}"
               Top="{StaticResource Margin_Default_Size}"
               Right="{StaticResource Margin_Default_Size}"
               Bottom="{StaticResource Margin_Default_Size}"/>
    
    <Thickness x:Key="MarginBottom_Default"
               Bottom="{StaticResource Margin_Default_Size}"/>
    
    <Thickness x:Key="MarginTop_Default"
               Top="{StaticResource Margin_Default_Size}"/>

    <!-- #endregion -->

    <!-- #region general -->
    
    <Style x:Key="ErrorText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!-- #endregion -->

    <!-- #region datagrid -->

    <!-- #region datagrid colors & brushes -->
    
    <Color x:Key="DataGrid_LineColor">LightGray</Color>
    <SolidColorBrush x:Key="DataGrid_HorizontalLinesBrush" Color="{DynamicResource DataGrid_LineColor}"/>
    <Color x:Key="DataGridRow_HighlightColor">DodgerBlue</Color>
    <Color x:Key="DataGridRow_InactiveSelectionHighlightColor">Gainsboro</Color>
    <SolidColorBrush x:Key="DataGridCell_IsKeyboardFocusWithinBackgroundBrush">RoyalBlue</SolidColorBrush>
    <SolidColorBrush x:Key="DataGridCell_IsKeyboardFocusWithinBorderBrush">Transparent</SolidColorBrush>
    <SolidColorBrush x:Key="DataGrid_AlternatingRowBackground">#f9f9f9</SolidColorBrush>

    <LinearGradientBrush x:Key="DataGrid_VerticalLinesBrush"
                         StartPoint="0,0" EndPoint="0,3" 
                         MappingMode="Absolute" SpreadMethod="Repeat">
        <GradientStop Offset="0" Color="{DynamicResource DataGrid_LineColor}"/>
        <GradientStop Offset="0.5" Color="{DynamicResource DataGrid_LineColor}"/>
        <GradientStop Offset="0.5" Color="Transparent"/>
        <GradientStop Offset="1" Color="Transparent"/>
    </LinearGradientBrush>
    
    <!-- #endregion -->

    <!-- #region dimensions -->
    
    <sys:Double x:Key="DataGrid_RowHeight">26</sys:Double>
    <Thickness x:Key="DataGridCell_IsKeyboardFocusWithinBorderThickness">0</Thickness>

    <!-- #endregion -->

    <Style x:Key="DataGrid_GroupHeaderStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Expander x:Name="expander" IsExpanded="True">
                        <Expander.Header>
                            <Border VerticalAlignment="Center"
                                    Height="{DynamicResource DataGrid_RowHeight}">
                                <TextBlock Text="{Binding Name}" 
                                           FontWeight="Bold" 
                                           VerticalAlignment="Center" 
                                           Margin="8,0,0,0"
                                           />
                            </Border>
                        </Expander.Header>
                        <ItemsPresenter/>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGrid_Cell" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="4,0,4,0" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource DataGridCell_IsKeyboardFocusWithinBorderBrush}" />
                <Setter Property="BorderThickness" Value="{DynamicResource DataGridCell_IsKeyboardFocusWithinBorderThickness}"/>
                <Setter Property="Background" Value="{DynamicResource DataGridCell_IsKeyboardFocusWithinBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextColorKey}" Color="{DynamicResource DataGridCell_HighlightColor}" />
        </Style.Resources>
    </Style>

    <Style x:Key="Debug_ColorTest" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
    </Style>
    
    <Style x:Key="DataGrid_Row" TargetType="{x:Type DataGridRow}">
        <Setter Property="Height" Value="{DynamicResource DataGrid_RowHeight}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource DataGridRow_HighlightColor}" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource DataGridRow_InactiveSelectionHighlightColor}" />
        </Style.Resources>
        <!--
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
        -->
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGrid_HorizontalLinesBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGrid_VerticalLinesBrush}"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource DataGrid_AlternatingRowBackground}"/>
        <Setter Property="RowStyle" Value="{DynamicResource DataGrid_Row}"/>
        <Setter Property="CellStyle" Value="{DynamicResource DataGrid_Cell}"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <!-- bug fix-->
        <Style.Triggers>
            <Trigger Property="HeadersVisibility" Value="Column">
                <Setter Property="RowHeaderWidth" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- #endregion -->
    
    <!-- #region grid splitter -->

    <Color x:Key="GridSplitter_Color">SkyBlue</Color>
    
    <Style TargetType="GridSplitter"
           BasedOn="{StaticResource {x:Type GridSplitter}}"
           x:Key="GridSplitter_Base">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="GridSplitter.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                  AutoReverse="False" 
                                  Duration="0:0:0.050" 
                                  From="Transparent" To="{StaticResource GridSplitter_Color}"
                                  AccelerationRatio="1" 
                                  Storyboard.TargetProperty="(GridSplitter.Background).(SolidColorBrush.Color)"
                                  FillBehavior="HoldEnd">
                            </ColorAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="GridSplitter.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                  AutoReverse="False" 
                                  Duration="0:0:0.25" 
                                  From="{StaticResource GridSplitter_Color}" To="Transparent"
                                  AccelerationRatio="1" 
                                  Storyboard.TargetProperty="(GridSplitter.Background).(SolidColorBrush.Color)"
                                  FillBehavior="HoldEnd">
                            </ColorAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>
     
    <Style TargetType="GridSplitter" 
           BasedOn="{StaticResource GridSplitter_Base}"
           x:Key="GridSplitter_Horizontal">
        <Setter Property="Height" Value="4"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style TargetType="GridSplitter" 
           BasedOn="{StaticResource GridSplitter_Base}"
           x:Key="GridSplitter_Vertical">
        <Setter Property="Margin" Value="4,0,4,0"/>
        <Setter Property="Width" Value="4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <!-- #endregion -->

</ResourceDictionary>